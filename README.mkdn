Team Win Recovery Project - Samsung
===================================

INTRO
-----
HTC phones have a separate recovery partition, allowing recoveries such as TWRP to be flashed independent of the rom installed.  
However, most samsung phones (excluding nexus') must have the recovery built into the kernel, making recoveries such as TWRP uncommon.  
This tutorial will hopefully make this a problem of the past.  

Note: This is all still a heavy WIP, mostly for developers and beta testers.  
So if you have any problems, sugestions, etc feel free to hop into `#twrp on irc.freenode.net` for some IRC help.  
I `Smasher816` (or my bouncer) will always be on, so feel free to msg me.  

Compile TWRP
------------
(If you are a normal person who just wants TWRP on their device, let a developer do this. You can follow the later part with relative ease)

TWRP is only designed to be made against the CM7 tree so we will set that up.  
Go ahead and follow the cyanogenmod wiki to setup your build environment  
(ex: http://wiki.cyanogenmod.com/wiki/Samsung_Captivate:_Compile_CyanogenMod_(Linux))  
A completed install should have the necessary programs to build, the full repo synced, proprietary files for your vendor and phone, and prebuilts such as rom manager.  

(replace `~/CM7` with your CM7 source path, and `captivatemtd` with your device)

Next we must add some extra folders used by TWRP  

    clone https://github.com/Dees-Troy/TWRP2-CM7_external_libjpeg to ~/CM7/external/libjpeg
    clone https://github.com/Dees-Troy/TWRP2-CM7_external_pigz to ~/CM7/external/pigz

Now we have to replace three of the stock CM7 folders, with ones modified by TWRP. replace  

    ~/CM7/bootable/recovery with https://github.com/TeamWin/Team-Win-Recovery-Project
    ~/CM7/build with https://github.com/Dees-Troy/TWRP2-CM7_build
    ~/CM7/external/busybox with https://github.com/Dees-Troy/TWRP2-CM7_external_busybox

Finally, we have to modify some device files  
cd to `~/CM7/device/samsung/aries-common` and edit `recovery.rc`  
under `on init` and `# setup the global environment` make the two lines look like below  

    export PATH /sbin:/vendor/bin:/system/sbin:/system/bin:/system/xbin
    export LD_LIBRARY_PATH /sbin:/vendor/lib:/system/lib

at the end of the `BoardConfigCommon.mk` file add (change to your screen size)  
(may also have to add this line to `BoardConfig.mk` in `~/CM7/device/samsung/captivate`)  

    DEVICE_RESOLUTION := 480x800

----

Your CM7 tree is now ready to build TWRP, so lets make some ramdisks  
cd to `~/CM7` and run  

    . build/envsetup.sh && lunch full_captivatemtd-eng && make bootimage

----

This command should have built a new CM7 kernel with new recovery ramdisks.  
From here you can flash the kernel (stored as `~/CM7/device/samsung/captivate/kernel`),  
or create a flashable CM7 zip with `brunch captivatemtd`  
Either way, everything made should have TWRP in it.  

Build TWRP kernel
-----------------
This process used to be long and confusing (feel free to look at README-OLD.mkdn)  
I learned that the `glitch.sh` script runs `mkshbootimg.py` which fuses the `zImage` (kernel) `ramdisk-image` (initramfs) `ramdisk-recovery` (recovery) into one flashable `boot.img`  
This knowledge led me to develop CM9 kernels with CM7 (TWRP) ramdisks, however this required developer work.  

Now **Dees_Troy** has converted this script to a C program runable on the device,  
this allows people to inject any recovery-ramdisk.img (ex: TWRP) into any kernel (ex: Glitch), all on the device without any developer knowledge.  
Once a developer builds a TWRP ramdisk in a CM7 tree for devices, people will be able to inject it into their current kernels with one command
(later to be integrated into the goo app).  

(Can download straight to device instead of using adb push, and may use a terminal emulator app instead of adb shell)  

Download the `installtwrp` binary, and push it to your phone  

    adb root && adb remount
    adb push installtwrp /system/bin
    adb shell chmod 755 /system/bin/installtwrp
    
Use `installtwrp` to inject TWRP into your kernel of choice  

    adb push recovery-ramdisk.img /sdcard/	(provided by a developer, I have a few for SGS devices above)
    adb shell
    cd /sdcard/
    unzip CWM-FLASHABLE-KERNEL-FILE.zip boot.img
    installtwrp boot.img recovery-ramdisk.img boot-twrp.img
    flash_image boot boot-new.img		(or use heimdall or anything else that can flash kernel images)

Enjoy!
======
